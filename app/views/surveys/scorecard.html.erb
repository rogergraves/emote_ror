<div id="content-win-centr-scorecard" role="main">
  <div class="survey-title"><%= @survey.project_name %></div>
    <div id="scorecard-content">
		<%= javascript_include_tag 'http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js' %>
		<%= javascript_include_tag 'highcharts.js' %>

		<!-- 1a) Optional: add a theme file -->
		<!--
			<script type="text/javascript" src="../js/themes/gray.js"></script>
		-->

		<!-- 2. Add the JavaScript to initialize the chart on document ready -->
		        <style type="text/css">
		            .commentRow1 {
		                /*display: inline-block;*/
		                height:25px;
		                width: 1150px;
		                background-color: #FFFFFF;
		                font-size: 11px;
		            }
		            .commentRow2 {
		                /*display: inline-block;*/
		                height:25px;
		                width: 1150px;
		                background-color: #CCCCCC;
		                font-size: 11px;
		            }
		        </style>
		
<script type="text/javascript">

    var colors = {'green': '#336600', 'red': '#990033', white: '#FFFFFF', grey: '#CCCCCC'};
	var intensity = {pp: 'enthusiasts', mp: 'participants', mn: 'indifferent', pn:'detractors'};
	var pieColors = {pp: '#009933', mp: '#000066', mn: '#999999', pn: '#990000'};
	<% results = @survey.result_obj %>
	var configTotals = <%= raw results[:totals].to_json -%>;
	var configBars = <%= raw results[:bars].to_json -%>;
	var configPie = <%= raw results[:pie].to_json -%>;
	var configVerbatim = <%= raw @survey.verbatims_obj.to_json -%>;

    $(document).ready(function() {
        renderBarChart(configBars);
		renderPieChart(configPie);
        loadComments(configVerbatim);


		$('#btnCommentFilter').click(filterVerbatim);
        $('#seeAllComments').click(function (){
            $('#txtCommentFilter').val('');
            filterVerbatim();
        });

	});

    function renderBarChart(config){
				        var categories = [];
                        var data = [];
				        for (var key in config) {
				            var currentCfg = config[key];
				            var obj = {y: parseInt(currentCfg.value), color: colors[currentCfg.color], name: currentCfg.name}
				            data.push(obj);
                            categories.push(currentCfg.name.toUpperCase());
				        }

				        var chart = new Highcharts.Chart({
				        exporting: {enabled: false},
				        chart: {
				         renderTo: 'barChart',
				         defaultSeriesType: 'column',
				         margin: [ 50, 50, 100, 80],
                         height: 280,
                         width: 800
				        },
				        title: {text: 'Emotion Spectrum'},
				        xAxis: {
				         categories: categories,
				         labels: {
				            rotation: -90,
				            align: 'right',
				            style: {font: 'normal 11px Verdana, sans-serif'}
				         }
				        },
				        yAxis: {
				         min: 0,
				         title: {text: '' }
				        },

				        plotOptions: {
				             column: {
				                cursor: 'pointer',
				                point: {
				                   events: {
				                      click: function() {
                                         var cfg = this.config;
				                         doAjax({
				                             data: {name: cfg.name},
                                             url: '/survey_results/verbatims.json',
				                             successCallback: function (response, textStatus) {
				                             var data = jQuery.parseJSON(response);
				                             loadComments(data);
				                          },
				                             errorCallback: function(request, textStatus, errorThrown){
				                              console.log(errorThrown);
                                              throw new Error('error fetching verbatims for a pointer');
				                          }
				                         });
				                      }
				                   }
				                }
				             }
				        },
				        legend: {enabled: false},
				        tooltip: {
				         formatter: function() { return '';}
				        },
				        series: [{
				            name: '',
				            data: data,
				            dataLabels: {
				               enabled: true,
				               color: '#FFFFFF',
				               align: 'right',
				               x: -3,
				               y: 10,
				               formatter: function() {
				                   return this.y;
				                },
				               style: {font: 'normal 10px Verdana, sans-serif'}
				             }
				            }]
				        });
				    }

	function renderPieChart(pieConfig){
				        var pieData = [];

				        var intTotalResponsesCount = 0;
				        for (var key in pieConfig){
				            var val = pieConfig[key];
				            var obj = {name: intensity[key], y: parseInt(val), color: pieColors[key]};
				            intTotalResponsesCount+= parseInt(val);
				            pieData.push(obj);
				        }

				        var pieChart = new Highcharts.Chart({
				              exporting: {enabled: false},
				              chart: {
				                 renderTo: 'pieChart',
				                 plotBackgroundColor: null,
				                 plotBorderWidth: null,
				                 plotShadow: false
				              },
				              title: {text: 'Barometer'},
				              tooltip: {
				                 formatter: function() {
				                    var pct = this.y/intTotalResponsesCount * 100;
				                    return '<b>'+ this.point.name +'</b>: '+ this.y +' responses (' + pct.toFixed(2) + '%)';

				                 }
				              },
				              plotOptions: {
				                 pie: {
				                    allowPointSelect: true,
				                    cursor: 'pointer',
				                    dataLabels: {enabled: false},
				                    showInLegend: true,
				                    point: {
				                       events: {
				                          click: function() {
				                             doAjax({
                                                 url: '/survey_results/verbatims.json',
				                                 data: {subset: this.config.name},
				                                 successCallback: function (response, textStatus) {
				                                  var data = jQuery.parseJSON(response);
				                                  loadComments(data);
				                               },
				                               errorCallback: function(request, textStatus, errorThrown){
				                                  throw new Error('error fetching verbatims for a pie');
				                                  console.log(errorThrown);
				                               }
				                             });
				                          }
				                       }
				                    }
				                 }
				              },
				               series: [{
				                 type: 'pie',
				                 name: 'Barometer',
				                 data: pieData
				              }]
				           });

				        $('#totalResp').html("Total Responses: " + intTotalResponsesCount);
				    }

    function loadComments(config){
        var verbatimHTML = "<table style='width: 1150px;'>\n";
        var i=0;
        var tr = '';
        for (var key in config){
            var row = config[key];
            var remainder = i % 2;

            var strEvents = " onmouseover='showDelButton("+row.id+")' onmouseout='hideDelButton("+row.id+")'";
            if (remainder == 1) tr = "\n<tr "+strEvents+" class='commentRow1'>\n";
            else tr = "\n<tr " +strEvents+ " class='commentRow2'>\n";


            var strEmoteTitle = row.face.split('_')[0];

            verbatimHTML+= tr + "\n<td align='left'>\n" +
                    "&nbsp;&nbsp;<img width='20px' height='20px' " +
                    " title='" + strEmoteTitle + "'" +
                    " src='/images/verbatim_intensity/" +
                    row.face + ".png'>&nbsp;&nbsp;  \n" + row.text + "\n</td>\n"+
                    "\n<td align='right'>\n" +
                    row.timestamp + "&nbsp;" +
                    "\n<button style='visibility:hidden;' id='btn_del_"+row.id+"' type='button' onclick='deleteVerbatim("+row.id+");'>" +
                    "<img src='/images/trash_icon.png' width='15px' height='18px'></button> \n"+
                    "\n&nbsp;<td/>\n</tr>\n";
            i++;
        }
        verbatimHTML+= '\n</table>\n';
        $('#verbatimText').html(verbatimHTML);
    }

    function showDelButton(id){
        document.getElementById('btn_del_' + id).style.visibility = 'visible';
    }

    function hideDelButton(id){
        document.getElementById('btn_del_' + id).style.visibility = 'hidden';
    }

    function deleteVerbatim(id){
        var ok = confirm("Are you sure you want to delete this response? After you delete it there's no way to undo it.");
        if (ok){
             doAjax({
                 data: {id: id},
                 url: '/survey_results/delete_response.json',
                 successCallback: function (response, textStatus) {
                    $('#txtCommentFilter').val('');
                    filterVerbatim();
               },
                 errorCallback: function(request, textStatus, errorThrown){
                  console.log(errorThrown);
                  throw new Error('error deleting a verbatim: ' + id);
               }
             });
        }
    }

    function filterVerbatim(text){
        doAjax({
             url: '/survey_results/verbatims.json',
             data: {filter: $('#txtCommentFilter').val()},
             successCallback: function (response, textStatus) {
             var data = jQuery.parseJSON(response);
             loadComments(data);
           },
             errorCallback: function(request, textStatus, errorThrown){
              console.log(errorThrown);
               throw new Error('error filtering verbatims');
           }
         });
    }

    /**
     *
     * @param config.data - data to be sent to server
     * @param config.successCallback - function to call on success
     * @param config.errorCallback - function to call on failure
     */
    function doAjax(config){
       var strAjaxUrl = '/survey_results/verbatims.json';

       if (!config.data) config.data = {};
       config.data.survey = '<%= @survey.code -%>';
       config.data.action_token = '';
       config.data.session = '';
       $.ajax({
           type: "GET",
           url: config.url || strAjaxUrl,
           dataType: "html",
           data: config.data,
           cache: false,
           success: config.successCallback ,
           error: config.errorCallback
        });
    }


						</script>
						
						<table>
				            <tr>
				                <td>
				                    <!-- 3. Add the container -->
				                    <div id="barChart" style="width: 800px; height: 280px; margin-left: 50px;"></div>
				                </td>
				                <td>
				                    <div id="totalResp" style="margin-left: 0px;"></div>
				                    <div id="pieChart" style="width: 350px; height: 264px; margin-left: 10px"></div>
				                </td>
				            </tr>
				            <tr>
				                <td> <br/> </td>
				                <td></td>
				            </tr>

				            <tr>
				                <td>
				                    <span style="margin-left: 50px;">COMMENTS: ALL EMOTIONS</span>
                                    <input style="margin-left: 475px;" type="button" id="seeAllComments" value="See all comments">
                                </td>
                                <td>
				                    <input style="margin-left: 10px;" type="text" id="txtCommentFilter" size="35">
				                    <input type="button" id="btnCommentFilter" value="Go">
				                </td>
				            </tr>
				            <tr>
				                <td style="" colspan="2">
				                    <div id="verbatimText" style="width: 1200px; height: 200px; margin-left: 40px; overflow-y: scroll;"></div>
				                </td>
				            </tr>
				        </table>
	
		<!-- <%= javascript_include_tag '/fx/AC_OETags.js' %>

		<script language="JavaScript" type="text/javascript">
		var requiredMajorVersion = 10;
		var requiredMinorVersion = 0;
		var requiredRevision = 124;
		</script>

		<script language="JavaScript" type="text/javascript">
		var hasProductInstall = DetectFlashVer(6, 0, 65);
		var hasRequestedVersion = DetectFlashVer(requiredMajorVersion, requiredMinorVersion, requiredRevision);

		if ( hasProductInstall && !hasRequestedVersion ) {
			var MMPlayerType = (isIE == true) ? "ActiveX" : "PlugIn";
			var MMredirectURL = encodeURI(window.location);
		    document.title = document.title.slice(0, 47) + " - Flash Player Installation";
		    var MMdoctitle = document.title;

			AC_FL_RunContent(
				"src", "/fx/playerProductInstall",
				"FlashVars", "MMredirectURL="+MMredirectURL+'&MMplayerType='+MMPlayerType+'&MMdoctitle='+MMdoctitle+"",
				"width", "1140",
				"height", "100%",
				"align", "middle",
				"id", "main",
				'wmode', 'opaque',
				"quality", "high",
				"bgcolor", "#ffffff",
				"name", "main",
				"allowScriptAccess","sameDomain",
				"type", "application/x-shockwave-flash",
				"pluginspage", "http://www.adobe.com/go/getflashplayer"
			);
		} else if (hasRequestedVersion) {
			AC_FL_RunContent(
					"src", "/fx/main",
					"FlashVars", "survey=<%= @survey.code -%>&survey_id=<%= @survey.id -%>&action_token=<%= @survey.action_token -%>",
					"width", "1140",
					"height", "100%",
					"align", "middle",
					"id", "main",
					'wmode', 'opaque',
					"quality", "high",
					"bgcolor", "#ffffff",
					"name", "main",
					"allowScriptAccess","sameDomain",
					"type", "application/x-shockwave-flash",
					"pluginspage", "http://www.adobe.com/go/getflashplayer"
			);
		  } else {  // flash is too old or we can't detect the plugin
		    var alternateContent = 'Alternate HTML content should be placed here. '
		  	+ 'This content requires the Adobe Flash Player. '
		   	+ '<a href=http://www.adobe.com/go/getflash/>Get Flash</a>';
		    document.write(alternateContent);  // insert non-flash content
		  }
		// 
		</script>
		<noscript>
		  	<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
					id="main" width="1140" height="100%"
					codebase="http://fpdownload.macromedia.com/get/flashplayer/current/swflash.cab">
					<param name="movie" value="/fx/main.swf?survey_id='+<%= @survey.id -%>+'&survey='+<%= @survey.code -%>+'&action_token='+<%= @survey.action_token -%>" />
					<param name="quality" value="high" />
					<param name="bgcolor" value="#ffffff" />
					<param name="wmode" value="opaque" />
					<param name="allowScriptAccess" value="sameDomain" />
					<embed src="main.swf?survey_id='+<%= @survey.id -%>+'&survey='+<%= @survey.code -%>+'&action_token='+<%= @survey.action_token -%>" quality="high" bgcolor="#ffffff"
						width="1140" height="100%" name="main" align="middle"
						play="true"
						loop="false"
						quality="high"
						allowScriptAccess="sameDomain"
						type="application/x-shockwave-flash"
						pluginspage="http://www.adobe.com/go/getflashplayer">
					</embed>
			</object>
		</noscript>-->
    </div>
    <div class="share_scorecard">
	    <strong>Share Scorecard</strong>
        <span class="share_link_scorecard">
            <strong>Link: </strong>
            <%= text_field_tag '', public_scorecard_url(:code => @survey.scorecard_code), :class => 'locked-selectall' %>
        </span>
    </div>
</div>
